<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 龙漫</title>
    <link>https://lewis123456.github.io/posts/</link>
    <description>Recent content in Posts on 龙漫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 12 Oct 2019 21:53:58 +0800</lastBuildDate>
    
	<atom:link href="https://lewis123456.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>代码风格</title>
      <link>https://lewis123456.github.io/posts/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC/</link>
      <pubDate>Sat, 12 Oct 2019 21:53:58 +0800</pubDate>
      
      <guid>https://lewis123456.github.io/posts/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC/</guid>
      <description> 平安系风格(陈绿杰绿)  系统划分为业务层面和数据层面，例如controller-&amp;gt;service-&amp;gt;dao-&amp;gt;model中，model是数据层，定义model时只有数据，service和dao是业务层，只有接口。业务层通过接口实现解耦，实现多态。 遵循设计模式。 保证可靠性，依赖成熟有维护的框架和工具，方便甩锅。  微保风格(游绿炽绿鸿绿)  函数式编程。 高层策略和实现细节分离。 具有可扩展性。 遵循solid原则。 自主灵活，自研框架和工具类，查找问题困难。  我的风格  遵循solid原则，通过明确的设计模式来实现。 合理运用函数式编程思想，同时保证代码可读性。 接口解耦，依赖注入。 业务层和数据层明确划分，不互相包含。 编写代码生成工具类，提高编码效率。 遵循业界规范的API设计，例如google api design。 公司级系统采用内部框架和工具避免背锅，业余系统多尝试开源项目扩展视野。 大量阅读源代码，学习其中的设计思想，在项目中实践运用。大量阅读书籍，分析总结自我。 深入学习计算机基础知识。 保持技术热情，探索未知领域。 工作只能保证自己不饿死，要致富得靠勇气，运气。  </description>
    </item>
    
    <item>
      <title>反思自我的表现</title>
      <link>https://lewis123456.github.io/posts/%E5%8F%8D%E6%80%9D%E8%87%AA%E6%88%91%E7%9A%84%E8%A1%A8%E7%8E%B0/</link>
      <pubDate>Sun, 22 Sep 2019 23:26:49 +0800</pubDate>
      
      <guid>https://lewis123456.github.io/posts/%E5%8F%8D%E6%80%9D%E8%87%AA%E6%88%91%E7%9A%84%E8%A1%A8%E7%8E%B0/</guid>
      <description> 认识自我 自我认知是件很困难的事情，人们习惯于评价他人，但却缺少对自我的评价。自己评价自己其实是件很虚的事情，基本做不到，所以我们需要一面“镜子”来做这件事。生活和工作中有很多面这样的镜子，例如同事和你沟通时的表情和语气，上级给你指派任务时的态度等等。如果你感觉自己没有被尊重，那么你应该思考为什么？是不是你平时给人软弱可欺的印象，是不是你太好说话了，是不是你完成的工作漏洞摆出，你是否给人一种靠谱的感觉？永远不要直接问别人对你的看法如何，他们不会说真话，你也得不到你想要的真实答案。但是，你可以从他们平时对你的态度了解这一切。
改变自我 改变自我，改变别人对自己的看法，进而改变人生。有很多人说，要坚持自我，不要在意别人的看法。其实这根本做不到，因为人作为群居动物，他的情绪始终会受到身边其他人的影响。就像天气冷了，你总会感觉到冷一样。别人对你的态度，首先取决于你的权利和财力，本质上就是你的社会地位。你的权利大，你更加有钱，就算别人不会有求于你，也会对你另眼相看。欺软怕硬，富人更富，穷人更穷。富人欺负穷人，穷人欺负比自己更穷的人，这是一种刻在骨子里的东西，很少人能改变。其次，取决你于你的情商和智商。为人处事落落大方，待人和善又不卑不亢，让人可远观而不可亵玩。为人讲信用，知礼节，自信大度，让人钦佩。知识渊博，兴趣广泛，技术强悍，即使性格有缺陷，由于能力得到了大家的认可，能够帮助到人，也能获得尊重。
人性弱点  不自信，卑微 傲慢，不尊重他人 一无是处，任人摆布，没有自己的想法 举止猥琐，衣冠不整  取自真实事件  卢科光科辉，人称卢百科，涉猎极广。 谢科宗科钧，为人靠谱，云淡风轻。 曹武玮武，学习虚心，做事有计划，自制力强，从200斤减肥到120斤。 张银金银磊，谦虚幽默，创业，肉身翻墙。  </description>
    </item>
    
    <item>
      <title>定一个目标</title>
      <link>https://lewis123456.github.io/posts/%E5%AE%9A%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87/</link>
      <pubDate>Sat, 21 Sep 2019 22:02:55 +0800</pubDate>
      
      <guid>https://lewis123456.github.io/posts/%E5%AE%9A%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87/</guid>
      <description> 程序员的职业生涯  初级开发-&amp;gt;中级开发-&amp;gt;高级开发-&amp;gt;资深开发-&amp;gt;专家  技术架构师，关注通用技术重点，难点（例如陈白广白胜） 业务领域专家，关注相关领域业务特点和方案（例如黄白叶白飞）  初级开发-&amp;gt;中级开发-&amp;gt;高级开发-&amp;gt;组长-&amp;gt;部门经理-&amp;gt;CTO  沟通能力，组织协调能力（例如方白里白权） 技术架构，技术预判，业务发展方向   副业  IT咨询师（例如陈皓） 培训辅导，例如少儿编程辅导，就业编程培训 应用市场app（例如苏享茂的WePhone，王信文的刀塔传奇） 知识付费，例如极客时间，知识星球，值乎（例如覃超）  目标 两年时间内通过学习具备进入FLAG的能力
 英语 算法 编程思想 架构设计  </description>
    </item>
    
  </channel>
</rss>